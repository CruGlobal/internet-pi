name: Deploy to Raspberry Pi

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure Python and pip are installed
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip

      - name: Install Ansible
        run: |
          pip install --user ansible
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Set up Docker
        uses: docker/setup-docker-action@v4

      - name: Fix DNS resolvers
        run: |
          # Check if /etc/resolv.conf is a symlink (systemd-resolved)
          if [ -L /etc/resolv.conf ]; then
            echo "Skipping DNS fix: systemd-resolved is managing DNS."
          else
            echo -e 'nameserver 8.8.8.8\nnameserver 8.8.4.4' | sudo tee /etc/resolv.conf > /dev/null
          fi
          sudo systemctl restart docker

      - name: Prepare environment
        run: |
          id -u pi &>/dev/null || sudo adduser pi --disabled-password --gecos ""
          sudo usermod -aG docker pi
          sudo usermod -aG docker scry

          # Create config directory and write Google Cloud credentials
          mkdir -p config
          echo '${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}' > config/credentials.json
          chmod 600 config/credentials.json

          echo -e '[internet_pi]\n127.0.0.1 ansible_connection=local ansible_user=scry' > inventory.ini

          cp example.config.yml config.yml
          echo 'custom_metrics_enable: true' >> config.yml
          echo 'custom_metrics_bigquery_project: "'${{ secrets.BIGQUERY_PROJECT }}'"' >> config.yml
          echo 'custom_metrics_location: "'${{ secrets.METRICS_LOCATION }}'"' >> config.yml
          echo 'custom_metrics_prometheus_url: "http://prometheus:9090"' >> config.yml
          echo 'custom_metrics_collection_interval: "1h"' >> config.yml
          echo 'custom_metrics_credentials_path: "config/credentials.json"' >> config.yml

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Run Ansible playbook
        run: ~/.local/bin/ansible-playbook main.yml
        
      - name: list containers
        run: docker ps 
